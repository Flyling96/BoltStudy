//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bolt
{
	
	
	public partial class SpecifyVariableUnit
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(variableName);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			variableName = reader.ReadString();
		}
	}
	
	public partial class Vector3New
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(m_Value);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			m_Value = reader.ReadVector3();
		}
	}
	
	public partial class CreateStruct
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
		}
	}
	
	public partial class Expose
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(instance);
			writer.Write(@static);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			instance = reader.ReadBoolean();
			@static = reader.ReadBoolean();
		}
	}
	
	public partial class InvokeMember
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(chainable);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			chainable = reader.ReadBoolean();
		}
	}
	
	public partial class MemberUnit
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
		}
	}
	
	public partial class SetMember
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(chainable);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			chainable = reader.ReadBoolean();
		}
	}
	
	public partial class ForEach
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(dictionary);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			dictionary = reader.ReadBoolean();
		}
	}
	
	public partial class SelectOnEnum
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
		}
	}
	
	public partial class SelectOnFlow
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(_branchCount);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			_branchCount = reader.ReadInt32();
		}
	}
	
	public partial class SelectOnString
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(ignoreCase);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			ignoreCase = reader.ReadBoolean();
		}
	}
	
	public partial class SelectUnit`1
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			int _count = options.Count;
			writer.Write(_count);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			int _count = 0;
			_count = reader.ReadInt32();
			options = new System.Collections.Generic.List<>();
			for (int i = 0; (i < _count); i = (i + 1))
			{
				T _temp;
				options.Add(_temp);
			}
		}
	}
	
	public partial class Sequence
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(_outputCount);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			_outputCount = reader.ReadInt32();
		}
	}
	
	public partial class SwitchOnEnum
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
		}
	}
	
	public partial class SwitchOnString
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(ignoreCase);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			ignoreCase = reader.ReadBoolean();
		}
	}
	
	public partial class SwitchUnit`1
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			int _count = options.Count;
			writer.Write(_count);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			int _count = 0;
			_count = reader.ReadInt32();
			options = new System.Collections.Generic.List<>();
			for (int i = 0; (i < _count); i = (i + 1))
			{
				T _temp;
				options.Add(_temp);
			}
		}
	}
	
	public partial class Throw
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(custom);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			custom = reader.ReadBoolean();
		}
	}
	
	public partial class ToggleFlow
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(startOn);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			startOn = reader.ReadBoolean();
		}
	}
	
	public partial class ToggleValue
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(startOn);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			startOn = reader.ReadBoolean();
		}
	}
	
	public partial class TryCatch
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
		}
	}
	
	public partial class CustomEvent
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(_argumentCount);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			_argumentCount = reader.ReadInt32();
		}
	}
	
	public partial class EventUnit`1
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(coroutine);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			coroutine = reader.ReadBoolean();
		}
	}
	
	public partial class TriggerCustomEvent
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(_argumentCount);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			_argumentCount = reader.ReadInt32();
		}
	}
	
	public partial class Formula
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(cacheArguments);
			writer.Write(_formula);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			cacheArguments = reader.ReadBoolean();
			_formula = reader.ReadString();
		}
	}
	
	public partial class Literal
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
		}
	}
	
	public partial class BinaryComparisonUnit
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(numeric);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			numeric = reader.ReadBoolean();
		}
	}
	
	public partial class Comparison
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(numeric);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			numeric = reader.ReadBoolean();
		}
	}
	
	public partial class MoveTowards`1
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(perSecond);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			perSecond = reader.ReadBoolean();
		}
	}
	
	public partial class Round`2
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(rounding);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
		}
	}
	
	public partial class WaitForFlow
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(resetOnExit);
			writer.Write(_inputCount);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			resetOnExit = reader.ReadBoolean();
			_inputCount = reader.ReadInt32();
		}
	}
	
	public partial class GetVariable
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(specifyFallback);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			specifyFallback = reader.ReadBoolean();
		}
	}
	
	public partial class UnifiedVariableUnit
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(kind);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
		}
	}
	
	public partial class MultiInputUnit`1
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(_inputCount);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			_inputCount = reader.ReadInt32();
		}
	}
	
	public partial class NesterUnit`2
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
		}
	}
	
	public partial class Unit
	{
		
		public virtual void BinarySerialize(System.IO.BinaryWriter writer)
		{
		}
		
		public virtual void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			position = reader.ReadVector2();
		}
	}
	
	public partial class CustomSuperUnit
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(VariableName);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			VariableName = reader.ReadString();
		}
	}
	
	public partial class FunctionSuperUnit
	{
		
		public override void BinarySerialize(System.IO.BinaryWriter writer)
		{
			base.BinarySerialize(writer);
			writer.Write(functionName);
		}
		
		public override void BinaryDeserialize(System.IO.BinaryReader reader)
		{
			base.BinaryDeserialize(reader);
			functionName = reader.ReadString();
		}
	}
}
